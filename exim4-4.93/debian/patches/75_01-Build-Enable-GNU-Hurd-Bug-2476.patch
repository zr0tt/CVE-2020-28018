From b30930a554edd087932dbff2d4d32f340de28ed1 Mon Sep 17 00:00:00 2001
From: "Heiko Schlittermann (HS12-RIPE)" <hs@schlittermann.de>
Date: Tue, 3 Dec 2019 07:23:25 +0100
Subject: [PATCH 1/2] Build: Enable *GNU (Hurd) Bug 2476

---
 src/OS/Makefile-Base            |  2 ++
 src/OS/Makefile-GNU             | 29 +++++++++++++++++
 src/OS/os.c-GNU                 | 55 +++++++++++++++++++++++++++++++++
 src/OS/os.h-GNU                 | 23 ++++++++++++++
 src/OS/unsupported/Makefile-GNU | 29 -----------------
 src/OS/unsupported/os.c-GNU     | 55 ---------------------------------
 src/OS/unsupported/os.h-GNU     | 23 --------------
 7 files changed, 109 insertions(+), 107 deletions(-)
 create mode 100644 src/OS/Makefile-GNU
 create mode 100644 src/OS/os.c-GNU
 create mode 100644 src/OS/os.h-GNU
 delete mode 100644 src/OS/unsupported/Makefile-GNU
 delete mode 100644 src/OS/unsupported/os.c-GNU
 delete mode 100644 src/OS/unsupported/os.h-GNU

--- a/OS/Makefile-Base
+++ b/OS/Makefile-Base
@@ -82,6 +82,7 @@ Makefile: ../OS/Makefile-Base ../OS/Make
 os.h:	$(SCRIPTS)/Configure-os.h \
 	$(O)/os.h-Darwin	\
 	$(O)/os.h-FreeBSD	\
+	$(O)/os.h-GNU		\
 	$(O)/os.h-Linux		\
 	$(O)/os.h-OpenBSD	\
 	$(O)/os.h-SunOS5
@@ -92,6 +93,7 @@ os.h:	$(SCRIPTS)/Configure-os.h \
 os.c:   ../src/os.c \
 	$(SCRIPTS)/Configure-os.c \
 	$(O)/os.c-FreeBSD	\
+	$(O)/os.c-GNU		\
 	$(O)/os.c-Linux		\
 	$(O)/os.c-SunOS5
 	$(SHELL) $(SCRIPTS)/Configure-os.c
--- /dev/null
+++ b/OS/Makefile-GNU
@@ -0,0 +1,29 @@
+# Exim: OS-specific make file for GNU and variants.
+
+HAVE_ICONV=yes
+
+BASENAME_COMMAND=look_for_it
+CHOWN_COMMAND=look_for_it
+CHGRP_COMMAND=look_for_it
+CHMOD_COMMAND=look_for_it
+
+CFLAGS ?= -O -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE
+
+DBMLIB = -ldb
+USE_DB = yes
+
+LIBS = -lnsl -lcrypt -lm
+LIBRESOLV = -lresolv
+
+X11=/usr/X11R6
+XINCLUDE=-I$(X11)/include
+XLFLAGS=-L$(X11)/lib
+X11_LD_LIB=$(X11)/lib
+
+EXIWHAT_PS_ARG=ax
+EXIWHAT_EGREP_ARG='/exim( |$$)'
+EXIWHAT_MULTIKILL_CMD=killall
+EXIWHAT_MULTIKILL_ARG=exim
+EXIWHAT_KILL_SIGNAL=-USR1
+
+# End
--- /dev/null
+++ b/OS/os.c-GNU
@@ -0,0 +1,55 @@
+/*************************************************
+*     Exim - an Internet mail transport agent    *
+*************************************************/
+
+/* See the file NOTICE for conditions of use and distribution. */
+
+/* GNU-specific code. This is concatenated onto the generic src/os.c file.
+GNU/Hurd has approximately the same way to determine the load average as NeXT,
+so a variant of this could also be in the generic os.c file. See the GNU EMacs
+getloadavg.c file, from which this snippet was derived. getloadavg.c from Emacs
+is copyrighted by the FSF under the terms of the GPLv2 or any later version.
+Changes are hereby placed under the same license, as requested by the GPL. */
+
+#ifndef OS_LOAD_AVERAGE
+#define OS_LOAD_AVERAGE
+
+#include <mach.h>
+
+static processor_set_t default_set;
+static int getloadavg_initialized;
+
+int
+os_getloadavg (void)
+{
+host_t host;
+struct processor_set_basic_info info;
+unsigned info_count;
+
+if (!getloadavg_initialized)
+  {
+  if (processor_set_default (mach_host_self(), &default_set) == KERN_SUCCESS)
+    getloadavg_initialized = 1;
+  }
+
+if (getloadavg_initialized)
+  {
+  info_count = PROCESSOR_SET_BASIC_INFO_COUNT;
+  if (processor_set_info(default_set, PROCESSOR_SET_BASIC_INFO, &host,
+       (processor_set_info_t)&info, &info_count) != KERN_SUCCESS)
+    getloadavg_initialized = 0;
+  else
+    {
+    #if LOAD_SCALE == 1000
+    return info.load_average;
+    #else
+    return (int) (((double) info.load_average * 1000) / LOAD_SCALE));
+    #endif
+    }
+  }
+
+return -1;
+}
+#endif  /* OS_LOAD_AVERAGE */
+
+/* End of os.c-GNU */
--- /dev/null
+++ b/OS/os.h-GNU
@@ -0,0 +1,23 @@
+/* Exim: OS-specific C header file for GNU/Hurd */
+
+#define CRYPT_H
+#define GLIBC_IP_OPTIONS
+#define HAVE_BSD_GETLOADAVG
+#define HAVE_MMAP
+#define HAVE_SYS_VFS_H
+#define NO_IP_VAR_H
+#define SIG_IGN_WORKS
+#define SIOCGIFCONF_GIVES_ADDR
+
+#define F_FREESP     O_TRUNC
+typedef struct flock flock_t;
+
+#define os_strsignal strsignal
+#define OS_STRSIGNAL
+
+/* Hurd-specific bits below */
+
+/* default is non-const */
+#define ICONV_ARG2_TYPE const char **
+
+/* End */
--- a/OS/unsupported/Makefile-GNU
+++ /dev/null
@@ -1,29 +0,0 @@
-# Exim: OS-specific make file for GNU and variants.
-
-HAVE_ICONV=yes
-
-BASENAME_COMMAND=look_for_it
-CHOWN_COMMAND=look_for_it
-CHGRP_COMMAND=look_for_it
-CHMOD_COMMAND=look_for_it
-
-CFLAGS ?= -O -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE
-
-DBMLIB = -ldb
-USE_DB = yes
-
-LIBS = -lnsl -lcrypt -lm
-LIBRESOLV = -lresolv
-
-X11=/usr/X11R6
-XINCLUDE=-I$(X11)/include
-XLFLAGS=-L$(X11)/lib
-X11_LD_LIB=$(X11)/lib
-
-EXIWHAT_PS_ARG=ax
-EXIWHAT_EGREP_ARG='/exim( |$$)'
-EXIWHAT_MULTIKILL_CMD=killall
-EXIWHAT_MULTIKILL_ARG=exim
-EXIWHAT_KILL_SIGNAL=-USR1
-
-# End
--- a/OS/unsupported/os.c-GNU
+++ /dev/null
@@ -1,55 +0,0 @@
-/*************************************************
-*     Exim - an Internet mail transport agent    *
-*************************************************/
-
-/* See the file NOTICE for conditions of use and distribution. */
-
-/* GNU-specific code. This is concatenated onto the generic src/os.c file.
-GNU/Hurd has approximately the same way to determine the load average as NeXT,
-so a variant of this could also be in the generic os.c file. See the GNU EMacs
-getloadavg.c file, from which this snippet was derived. getloadavg.c from Emacs
-is copyrighted by the FSF under the terms of the GPLv2 or any later version.
-Changes are hereby placed under the same license, as requested by the GPL. */
-
-#ifndef OS_LOAD_AVERAGE
-#define OS_LOAD_AVERAGE
-
-#include <mach.h>
-
-static processor_set_t default_set;
-static int getloadavg_initialized;
-
-int
-os_getloadavg (void)
-{
-host_t host;
-struct processor_set_basic_info info;
-unsigned info_count;
-
-if (!getloadavg_initialized)
-  {
-  if (processor_set_default (mach_host_self(), &default_set) == KERN_SUCCESS)
-    getloadavg_initialized = 1;
-  }
-
-if (getloadavg_initialized)
-  {
-  info_count = PROCESSOR_SET_BASIC_INFO_COUNT;
-  if (processor_set_info(default_set, PROCESSOR_SET_BASIC_INFO, &host,
-       (processor_set_info_t)&info, &info_count) != KERN_SUCCESS)
-    getloadavg_initialized = 0;
-  else
-    {
-    #if LOAD_SCALE == 1000
-    return info.load_average;
-    #else
-    return (int) (((double) info.load_average * 1000) / LOAD_SCALE));
-    #endif
-    }
-  }
-
-return -1;
-}
-#endif  /* OS_LOAD_AVERAGE */
-
-/* End of os.c-GNU */
--- a/OS/unsupported/os.h-GNU
+++ /dev/null
@@ -1,23 +0,0 @@
-/* Exim: OS-specific C header file for GNU/Hurd */
-
-#define CRYPT_H
-#define GLIBC_IP_OPTIONS
-#define HAVE_BSD_GETLOADAVG
-#define HAVE_MMAP
-#define HAVE_SYS_VFS_H
-#define NO_IP_VAR_H
-#define SIG_IGN_WORKS
-#define SIOCGIFCONF_GIVES_ADDR
-
-#define F_FREESP     O_TRUNC
-typedef struct flock flock_t;
-
-#define os_strsignal strsignal
-#define OS_STRSIGNAL
-
-/* Hurd-specific bits below */
-
-/* default is non-const */
-#define ICONV_ARG2_TYPE const char **
-
-/* End */
