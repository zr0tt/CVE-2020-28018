Description: Stop using exim's -C option in utility scripts (exiwhat
  et al.) since this breaks with ALT_CONFIG_PREFIX.
Author: Andreas Metzler <ametzler@bebt.de>
Forwarded: http://bugs.exim.org/show_bug.cgi?id=1045
Last-Update: 2018-12-31

--- a/src/exicyclog.src
+++ b/src/exicyclog.src
@@ -151,10 +151,10 @@ st='	 '
 exim_path=`grep "^[$st]*exim_path" $config | sed "s/.*=[$st]*//"`
 if test "$exim_path" = ""; then exim_path=BIN_DIRECTORY/exim4; fi
 
-spool_directory=`$exim_path -C $config -bP spool_directory | sed 's/.*=[  ]*//'`
+spool_directory=`$exim_path -bP spool_directory | sed 's/.*=[  ]*//'`
 
 if [ "$log_file_path" = "" ] ; then
-  log_file_path=`$exim_path -C $config -bP log_file_path | sed 's/.*=[  ]*//'`
+  log_file_path=`$exim_path -bP log_file_path | sed 's/.*=[  ]*//'`
 fi
 
 # If log_file_path contains only "syslog" then no Exim log files are in use.
--- a/src/eximon.src
+++ b/src/eximon.src
@@ -81,8 +81,8 @@ st='	 '
 EXIM_PATH=`grep "^[$st]*exim_path" $config | sed "s/.*=[$st]*//"`
 if test "$EXIM_PATH" = ""; then EXIM_PATH=BIN_DIRECTORY/exim4; fi
 
-SPOOL_DIRECTORY=`$EXIM_PATH -C $config -bP spool_directory | sed 's/.*=[  ]*//'`
-LOG_FILE_PATH=`$EXIM_PATH -C $config -bP log_file_path | sed 's/.*=[  ]*//'`
+SPOOL_DIRECTORY=`$EXIM_PATH -bP spool_directory | sed 's/.*=[  ]*//'`
+LOG_FILE_PATH=`$EXIM_PATH -bP log_file_path | sed 's/.*=[  ]*//'`
 
 # If log_file_path is "syslog" then logging is only to syslog, and the monitor
 # is unable to display a log tail unless EXIMON_LOG_FILE_PATH is set to tell
--- a/src/exinext.src
+++ b/src/exinext.src
@@ -98,8 +98,8 @@ if [ "$exim_path" = "" ]; then
 fi
 
 if test "$exim_path" = ""; then exim_path=BIN_DIRECTORY/exim4; fi
-spool_directory=`$exim_path $eximmacdef -C $config -bP spool_directory | sed 's/.*=[  ]*//'`
-qualify_domain=`$exim_path $eximmacdef -C $config -bP qualify_domain | sed 's/.*=[  ]*//'`
+spool_directory=`$exim_path $eximmacdef -bP spool_directory | sed 's/.*=[  ]*//'`
+qualify_domain=`$exim_path $eximmacdef -bP qualify_domain | sed 's/.*=[  ]*//'`
 
 # Now do the job. Perl uses $ so frequently that we don't want to have to
 # escape them all from the shell, so pass in shell variable values as
@@ -144,7 +144,7 @@ perl - $exim_path "$eximmacdef" $argone
   # Run Exim to get a list of hosts for the given domain; for
   # each one construct the appropriate retry key.
 
-  open(LIST, "$exim -C $config -v -bt $address |") ||
+  open(LIST, "$exim -v -bt $address |") ||
     die "can't run exim to route $address";
 
   while (<LIST>)
--- a/src/exiwhat.src
+++ b/src/exiwhat.src
@@ -99,8 +99,8 @@ fi
 st='	 '
 exim_path=`grep "^[$st]*exim_path" $config | sed "s/.*=[$st]*//"`
 if test "$exim_path" = ""; then exim_path=BIN_DIRECTORY/exim4; fi
-spool_directory=`$exim_path -C $config -bP spool_directory | sed "s/.*=[ ]*//"`
-process_log_path=`$exim_path -C $config -bP process_log_path | sed "s/.*=[ ]*//"`
+spool_directory=`$exim_path -bP spool_directory | sed "s/.*=[ ]*//"`
+process_log_path=`$exim_path -bP process_log_path | sed "s/.*=[ ]*//"`
 
 # The file that Exim writes when sent the SIGUSR1 signal is specified by
 # the process_log_path option. If that is not defined, Exim uses the file
